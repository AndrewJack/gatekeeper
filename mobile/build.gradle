apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'

def enableFabric = file('fabric.properties').exists()
if (enableFabric) {
    apply plugin: 'io.fabric'
}

android {
    compileSdkVersion compileSdk
    buildToolsVersion buildTools

    defaultConfig {
        applicationId "technology.mainthread.apps.gatekeeper"
        minSdkVersion minSdk
        targetSdkVersion targetSdk
        versionCode versionMajor * 1000000 + versionMinor * 10000 + versionPatch * 100 + versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"

        buildConfigField 'boolean', 'ENABLE_FABRIC', "false"
        resValue 'string', 'particle_auth', appProps["particle_auth"] != null ? appProps['particle_auth'] : "Authorization: particle-auth"
        resValue 'string', 'particle_device', appProps["particle_device"] != null ? appProps["particle_device"] : ''
        resValue 'string', 'bucket_name', appProps["bucket_name"] != null ? appProps["bucket_name"] : ''

        resConfigs "en"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dataBinding {
        enabled = true
    }

    signingConfigs {
        if (keyPropsDebug["store"] != null) {
            debug {
                storeFile keyPropsDebug["store"] != null ? file(keyPropsDebug["store"]) : null
                keyAlias keyPropsDebug["alias"] ?: ""
                storePassword keyPropsDebug["storePass"] ?: ""
                keyPassword keyPropsDebug["pass"] ?: ""
            }
        }

        release {
            storeFile keyPropsRelease["store"] != null ? file(keyPropsRelease["store"]) : null
            keyAlias keyPropsRelease["alias"] ?: ""
            storePassword keyPropsRelease["storePass"] ?: ""
            keyPassword keyPropsRelease["pass"] ?: ""
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
            versionNameSuffix '_debug_' + gitSha()
            applicationIdSuffix '.debug'
            versionNameSuffix " debug"
            resValue "string", "app_name", "Gatekeeper debug"
            ext.enableCrashlytics = false
        }
        release {
            if (keyPropsRelease["store"] != null) {
                signingConfig signingConfigs.release
            }
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            resValue "string", "app_name", "Gatekeeper"
            buildConfigField 'boolean', 'ENABLE_FABRIC', "${enableFabric}"
        }
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE-FIREBASE.txt'
        exclude 'META-INF/NOTICE'
    }
}

dependencies {

    // Local
    compile project(':common')

    // Android Wear
    wearApp project(':wear')

    // Dagger 2
    compile "com.google.dagger:dagger:${daggerVersion}"
    annotationProcessor "com.google.dagger:dagger-compiler:${daggerVersion}"
    provided "javax.annotation:jsr250-api:1.0"

    // Play Services
    compile "com.google.android.gms:play-services-wearable:${commonPlayServicesVersion}"

    // Firebase
    compile "com.google.firebase:firebase-core:${commonPlayServicesVersion}"
    compile "com.google.firebase:firebase-config:${commonPlayServicesVersion}"
    compile "com.google.firebase:firebase-database:${commonPlayServicesVersion}"
    compile "com.google.firebase:firebase-storage:${commonPlayServicesVersion}"
    compile "com.google.firebase:firebase-auth:${commonPlayServicesVersion}"
    compile "com.google.android.gms:play-services-auth:${commonPlayServicesVersion}"
    compile "com.google.firebase:firebase-messaging:${commonPlayServicesVersion}"
    compile 'com.firebaseui:firebase-ui-database:1.1.1'

    // Android support libraries
    compile "com.android.support:support-v4:${commonSupportLibraryVersion}"
    compile "com.android.support:support-v13:${commonSupportLibraryVersion}"
    compile "com.android.support:appcompat-v7:${commonSupportLibraryVersion}"
    compile "com.android.support:recyclerview-v7:${commonSupportLibraryVersion}"
    compile "com.android.support:cardview-v7:${commonSupportLibraryVersion}"
    compile "com.android.support:design:${commonSupportLibraryVersion}"
    compile "com.android.support:preference-v14:${commonSupportLibraryVersion}"

    // rx
    compile "io.reactivex.rxjava2:rxjava:${rxJavaVersion}"
    compile "io.reactivex.rxjava2:rxandroid:${rxAndroidVersion}"
    compile 'com.trello.rxlifecycle2:rxlifecycle:2.0.1'
    compile 'com.trello.rxlifecycle2:rxlifecycle-android:2.0.1'
    compile 'com.trello.rxlifecycle2:rxlifecycle-components:2.0.1'

    // Crash logs
    compile('com.crashlytics.sdk.android:crashlytics:2.6.5@aar') {
        transitive = true;
    }

    // Networking
    compile 'com.squareup.retrofit2:retrofit:2.2.0'
    compile 'com.squareup.retrofit2:adapter-rxjava2:2.2.0'
    compile 'com.squareup.retrofit2:converter-moshi:2.2.0'
    compile 'com.squareup.moshi:moshi:1.4.0'
    compile 'com.squareup.okhttp3:okhttp:3.6.0'
    compile 'com.squareup.okhttp3:logging-interceptor:3.6.0'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.jakewharton.picasso:picasso2-okhttp3-downloader:1.1.0'

    // Autovalue
    annotationProcessor 'com.google.auto.value:auto-value:1.3'
    provided 'com.google.auto.value:auto-value:1.3'
    annotationProcessor 'com.ryanharter.auto.value:auto-value-moshi:0.4.2'
    provided 'com.ryanharter.auto.value:auto-value-moshi:0.4.2'

    // Other
    compile 'com.squareup.okio:okio:1.11.0'
    compile 'com.jakewharton.timber:timber:4.5.1'
    compile('de.psdev.licensesdialog:licensesdialog:1.8.2') { exclude module: 'support-v4' }

    // Debug tools
    debugCompile 'com.facebook.stetho:stetho:1.4.2'
    debugCompile 'com.facebook.stetho:stetho-okhttp3:1.4.2'

    // Test
    testCompile 'junit:junit:4.12'
}

if (file("google-services.json").exists()) {
    apply plugin: 'com.google.gms.google-services'
} else {
    android.defaultConfig {
        resValue 'string', 'default_web_client_id', 'temp_client_id'
    }
}
apply from: '../config/static-analysis.gradle'
