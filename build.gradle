// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    repositories {
        jcenter()
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:2.3.1'
        classpath 'com.google.gms:google-services:3.0.0'
        classpath 'me.tatarka:gradle-retrolambda:3.4.0'
        //noinspection GradleDynamicVersion
        classpath 'io.fabric.tools:gradle:1.+'
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.13.0'
        classpath 'me.tatarka.retrolambda.projectlombok:lombok.ast:0.2.3.a2'
    }

    configurations.classpath.exclude group: 'com.android.tools.external.lombok'
}

allprojects {
    repositories {
        jcenter()
        maven { url 'https://maven.fabric.io/public' }
    }
}

apply plugin: 'com.github.ben-manes.versions'

project.ext.preDexLibs = !project.hasProperty('disablePreDex')

subprojects {
    project.plugins.whenPluginAdded { plugin ->
        if ("com.android.build.gradle.AppPlugin".equals(plugin.class.name)) {
            project.android.dexOptions.preDexLibraries = rootProject.ext.preDexLibs
        } else if ("com.android.build.gradle.LibraryPlugin".equals(plugin.class.name)) {
            project.android.dexOptions.preDexLibraries = rootProject.ext.preDexLibs
        }
    }

    ext {
        gitSha = { ->
            try {
                def stdout = new ByteArrayOutputStream()
                exec {
                    commandLine 'git', 'rev-parse', '--short', 'HEAD'
                    standardOutput = stdout
                }
                return stdout.toString().trim()
            } catch (ignored) {
                return null;
            }
        }

        // keystore property
        def Properties localProps = new Properties()
        if (file('../local.properties').exists()) {
            localProps.load(new FileInputStream(file('../local.properties')))
        }

        keyPropsDebug = new Properties()
        if (localProps['keystore-debug.props.file'] != null) {
            keyPropsDebug.load(new FileInputStream(file(localProps['keystore-debug.props.file'])))
        }

        keyPropsRelease = new Properties()
        if (localProps['keystore-release.props.file'] != null) {
            keyPropsRelease.load(new FileInputStream(file(localProps['keystore-release.props.file'])))
        }

        appProps = new Properties()
        if (localProps['app.props.file'] != null) {
            appProps.load(new FileInputStream(file(localProps['app.props.file'])))
        }

        versionMajor = 1
        versionMinor = 2
        versionPatch = 0
        versionBuild = 0 // bump for dogfood builds, public betas, etc.

        targetSdk = 25
        compileSdk = 25
        minSdk = 23
        buildTools = "25.0.2"
        commonPlayServicesVersion = '10.2.1'
        commonSupportLibraryVersion = '25.3.1'
        daggerVersion = '2.10'
        rxJavaVersion = '2.0.7'
        rxAndroidVersion = '2.0.1'
    }

    project.configurations.all {
        resolutionStrategy {
            eachDependency { details ->
                // Force all of the primary support libraries to use the same version.
                if (details.requested.group == 'com.android.support') {
                    details.useVersion commonSupportLibraryVersion
                }
            }
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.14.1'
}

task clean(type: Delete) {
    group 'build'
    delete rootProject.buildDir
}
