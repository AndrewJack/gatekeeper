apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

kotlin { experimental { coroutines 'enable' } }

android {
    compileSdkVersion compileSdk
    buildToolsVersion buildTools

    defaultConfig {
        applicationId "technology.mainthread.apps.gatekeeper"
        minSdkVersion 25
        targetSdkVersion targetSdk
        versionCode versionMajor * 1000000 + versionMinor * 10000 + versionPatch * 100 + versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dataBinding {
        enabled = true
    }

    signingConfigs {
        if (keyPropsDebug["store"] != null) {
            debug {
                storeFile keyPropsDebug["store"] != null ? file(keyPropsDebug["store"]) : null
                keyAlias keyPropsDebug["alias"] ?: ""
                storePassword keyPropsDebug["storePass"] ?: ""
                keyPassword keyPropsDebug["pass"] ?: ""
            }
        }

        release {
            storeFile keyPropsRelease["store"] != null ? file(keyPropsRelease["store"]) : null
            keyAlias keyPropsRelease["alias"] ?: ""
            storePassword keyPropsRelease["storePass"] ?: ""
            keyPassword keyPropsRelease["pass"] ?: ""
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
            versionNameSuffix '_debug_' + gitSha()
            applicationIdSuffix '.debug'
            versionNameSuffix " debug"
            resValue "string", "app_name", "Gatekeeper debug"
        }
        release {
            if (keyPropsRelease["store"] != null) {
                signingConfig signingConfigs.release
            }
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            resValue "string", "app_name", "Gatekeeper"
        }
    }

    lintOptions {
        // TODO - fix
        abortOnError false
    }
}

dependencies {

    // Local
    implementation project(':common')

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    kapt "com.android.databinding:compiler:$android_plugin_version"

    // Play Services
    implementation 'com.google.android.gms:play-services-wearable:11.4.2'

    // Wear support libraries
    compileOnly 'com.google.android.wearable:wearable:2.1.0'
    implementation 'com.google.android.support:wearable:2.1.0'

    // Dagger 2
    compileOnly "javax.annotation:jsr250-api:1.0"
    implementation "com.google.dagger:dagger-android:${daggerVersion}"
    implementation "com.google.dagger:dagger-android-support:${daggerVersion}"
    kapt "com.google.dagger:dagger-compiler:${daggerVersion}"
    kapt "com.google.dagger:dagger-android-processor:${daggerVersion}"

    // rx
    implementation "io.reactivex.rxjava2:rxjava:${rxJavaVersion}"
    implementation "io.reactivex.rxjava2:rxandroid:${rxAndroidVersion}"

    implementation 'com.squareup.okio:okio:1.13.0'
    implementation 'com.jakewharton.timber:timber:4.5.1'
}
